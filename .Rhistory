document()
document()
load_all()
document()
load_all()
library(devtools)
load_all()
document()
load_all()
document()
check()
install()
load_all()
library(devtools)
load_all()
document()
check()
install()
load_all()
library(devtools)
load_all()
document()
install()
load_all()
library(devtools)
load_all()
document()
check()
library(devtools)
load_all()
document()
check()
install.packages()
install()
R --version
data("Methylation")
set.seed(123456)
#' outBLB <- bootBLB(x = Methylation, sup = TRUE, plot=FALSE)
data("Methylation")
set.seed(123456)
outBLB <- bootBLB(x = Methylation, sup = TRUE, plot=FALSE)
load_all()
library(devtools)
load_all()
document()
data("Methylation")
library(VIM)
library(devtools)
plotBLB <- function(x, dim=c(1, 2), col.ind = NULL, col.var="#0E185F",
label.ind = FALSE, draw = c("biplot","ind","var"), titles = NULL,
ellipses = FALSE, endsegm = 0.75, repel = FALSE,
xylim = NULL){
EspA <- x$Ahat
EspB <- x$Bhat
k <- ncol(EspA)
if(k < max(dim)){
stop(paste("The maximum number of dimensions in the logistic biplot fit is", k, "Review the dimensions requested for the biplot."))
}
grap <- match.arg(draw[1], c("ind","var","biplot"))
#######.... Markers row
dd1 <- paste0("bb", dim[1])
dd2 <- paste0("bb", dim[2])
EspB$x.50 = (-EspB[["bb0"]]*EspB[[dd1]]) / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
EspB$y.50 = (-EspB[["bb0"]]*EspB[[dd2]]) / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
EspB$x.75 = (log(endsegm/(1-endsegm))-EspB[["bb0"]])*EspB[[dd1]] / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
EspB$y.75 = (log(endsegm/(1-endsegm))-EspB[["bb0"]])*EspB[[dd2]] / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
colnames(EspA) <- c(paste0("Dim", seq(1,k,1)))
if (!requireNamespace("tidyr", quietly = TRUE)) {
stop("Package \"tidyr\" needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("dplyr", quietly = TRUE)) {
stop("Package \"dplyr\" needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
stop("Package \"ggplot2\" needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("ggrepel", quietly = TRUE)) {
stop("Package \"ggrepel\" needed for this function to work. Please install it.",
call. = FALSE)
}
if(ellipses){
min.plot <- ifelse(is.null(xylim), floor(min(min(x$Ellip$Dimb1), min(x$Ellip$Dimb2))), xylim[1])
max.plot <- ifelse(is.null(xylim), ceiling(max(max(x$Ellip$Dimb1), max(x$Ellip$Dimb2))), xylim[2])
}else{
min.plot <- ifelse(is.null(xylim), floor(min(min(EspA$Dim1), min(EspA$Dim2))), xylim[1])
max.plot <- ifelse(is.null(xylim), ceiling(max(max(EspA$Dim1), max(EspA$Dim2))), xylim[2])
}
if(x$method == "CG") subt <- "Estimation with Conjugate Gradient"
if(x$method != "CG") subt <- paste0("Estimation with ", x$method, " algorithm")
if(grap=="ind"){
if (is.null(titles)) titulo <- "Individuals plot"
if (!is.null(titles)) titulo <- titles
if(is.null(col.ind)){
g <- ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(EspA[,dim[1]], y=EspA[,dim[2]]), color='#E7B800', size = 2, shape=17)+
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2)  +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot, max.plot) + ggplot2::ylim(min.plot, max.plot) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold"), legend.position = "none") +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}else{
g <-  ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(EspA[,dim[1]], y=EspA[,dim[2]], colour=col.ind), size = 2, shape=17)+
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2)  +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot, max.plot) + ggplot2::ylim(min.plot, max.plot) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold")) +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}
if(label.ind){
if(repel){
g <- g +
ggrepel::geom_text_repel(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]], label = rownames(EspA)), size=3.5, segment.color = "grey50")
}else{
g <- g +
ggplot2::geom_text(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]], label = rownames(EspA)), size=3.5)
}
}
}
min.plot2 <- ifelse(is.null(xylim), floor(min(min(EspB$x.50), min(EspB$x.75), min(EspB$y.50), min(EspB$y.75))), xylim[1])
max.plot2 <- ifelse(is.null(xylim), ceiling(max(max(EspB$x.50), max(EspB$x.75), max(EspB$y.50), max(EspB$y.75))), xylim[2])
limit2 <- max(abs(min.plot2), abs(max.plot2))
if(grap == "var"){
if (is.null(titles)) titulo <- "Variables plot"
if (!is.null(titles)) titulo <- titles
g <- ggplot2::ggplot() +
ggplot2::geom_segment(data=EspB, ggplot2::aes(x=x.50, y=y.50, xend=x.75, yend=y.75),
arrow=grid::arrow(angle=25, type="closed",ends="last", length=grid::unit(0.3,"cm")),
colour = col.var, show.legend=FALSE) +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot2, max.plot2) + ggplot2::ylim(min.plot2, max.plot2) +
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2)  +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold"),
legend.position = "none") +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
if(repel){
g <- g +
ggrepel::geom_text_repel(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75),
hjust = (1 - 1.2 * sign(x.75))/ 2),
size=3, segment.color = "grey50", colour = "black", vjust=0)
}else{
g <- g +
ggplot2::geom_text(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75),
hjust = (1 - 1.2 * sign(x.75))/ 2),
size=3, colour = "black", vjust=0)
}
}
min.plot3 <-  min(min.plot, min.plot2)
max.plot3 <-  max(max.plot, max.plot2)
limit3 <- max(abs(min.plot3), abs(max.plot3))
if(grap == "biplot"){
if (is.null(titles)) titulo <- "Logistic Biplot"
if (!is.null(titles)) titulo <- titles
if(is.null(col.ind)){
g <- ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]]), color='#E7B800', size = 2, shape=17)+
ggplot2::geom_segment(data=EspB, ggplot2::aes(x=x.50, y=y.50, xend=x.75, yend=y.75), arrow=grid::arrow(angle=20,type="closed",ends="last", length=grid::unit(0.3,"cm")), colour = col.var, show.legend=FALSE) +
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2) +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot3, max.plot3) + ggplot2::ylim(min.plot3, max.plot3) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold"),
legend.position = "none") +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}else{
g <- ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]], colour=col.ind), size = 2, shape=17)+
ggplot2::geom_segment(data=EspB, ggplot2::aes(x=x.50, y=y.50, xend=x.75, yend=y.75), arrow=grid::arrow(angle=20,type="closed",ends="last", length=grid::unit(0.3,"cm")), colour = col.var, show.legend=FALSE) +
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2) +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot3, max.plot3) + ggplot2::ylim(min.plot3, max.plot3) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold")) +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}
if(repel){
g <- g +
ggrepel::geom_text_repel(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75), hjust = (1 - 1.2 * sign(x.75))/ 2),
size=3, segment.color = "grey50", vjust=0)
}else{
g <- g +
ggplot2::geom_text(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75), hjust = (1 - 1.2 * sign(x.75))/ 2),
size=3, vjust=0)
}
if(label.ind){
g <- g +
ggrepel::geom_text_repel(data=EspA, ggplot2::aes(x=Dim1, y=Dim2, label = rownames(EspA)), size=3.5, segment.color = "grey50")
}
}
if(ellipses){
g <- g +
ggplot2::geom_point(data=x$Ellip, ggplot2::aes(x=Dimb1, y=Dimb2, group=ind), size=0.001, colour="lightgray", shape=20)
}
return(g + ggplot2::coord_fixed())
}
load_all()
rm(list = ls())
library(devtools)
load_all()
?BiplotML::Log_Bip
?BiplotML::LogBip
LogBip(
x,
k = 2,
method = "MM",
type = NULL,
plot = TRUE,
maxit = NULL,
endsegm = 0.9,
label.ind = FALSE,
col.ind = NULL,
draw = c("biplot", "ind", "var"),
random_start = FALSE,
L = 0,
cv_LogBip = FALSE
)
data("Methylation")
res_MM <- LogBip(x = Methylation, method = "MM", maxit = 1000)
data("Methylation")
set.seed(12345)
n <- nrow(Methylation)
p <- ncol(Methylation)
miss <- matrix(rbinom(n*p, 1, 0.2), n, p) #I simulate some missing data
miss <- ifelse(miss == 1, NA, miss)
x <- Methylation + miss  #Matrix containing missing data
out <- LogBip(x, method = "PDLB", maxit = 1000)
load_all()
res_MM <- LogBip(x = Methylation, method = "MM", maxit = 1000)
data("Methylation")
set.seed(12345)
n <- nrow(Methylation)
p <- ncol(Methylation)
miss <- matrix(rbinom(n*p, 1, 0.2), n, p) #I simulate some missing data
miss <- ifelse(miss == 1, NA, miss)
x <- Methylation + miss  #Matrix containing missing data
out <- LogBip(x, method = "PDLB", maxit = 1000)
res_MM <- LogBip(x = Methylation, method = "MM", maxit = 1000)
?LogBip
load_all()
res_MM <- LogBip(x = Methylation, method = "MM", maxit = 1000)
outBLB <- bootBLB(x = Methylation, sup = TRUE, plot=TRUE)
load_all()
outBLB <- bootBLB(x = Methylation, sup = TRUE, plot=TRUE)
load_all()
document()
paste(R.Version()[c("major", "minor")], collapse = ".")
load_all()
document()
check()
load_all()
document()
check()
load_all()
document()
check()
devtools::release()
devtools::release()
spell_check()
spell_check()
devtools::release()
use_cran_comments()
devtools::release()
devtools::release()
?BiplotML::plotBLB
?BiplotML:::proj_LogBip
library(devtools)
load_all()
?LogBip
plotBLB <- function(x, dim=c(1, 2), col.ind = NULL, col.var="#0E185F",
label.ind = FALSE, draw = c("biplot","ind","var"), titles = NULL,
ellipses = FALSE, endsegm = 0.75, repel = FALSE,
xylim = NULL){
EspA <- x$Ahat
EspB <- x$Bhat
k <- ncol(EspA)
if(k < max(dim)){
stop(paste("The maximum number of dimensions in the logistic biplot fit is", k, "Review the dimensions requested for the biplot."))
}
grap <- match.arg(draw[1], c("ind","var","biplot"))
#######.... Markers row
dd1 <- paste0("bb", dim[1])
dd2 <- paste0("bb", dim[2])
EspB$x.50 = (-EspB[["bb0"]]*EspB[[dd1]]) / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
EspB$y.50 = (-EspB[["bb0"]]*EspB[[dd2]]) / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
EspB$x.75 = (log(endsegm/(1-endsegm))-EspB[["bb0"]])*EspB[[dd1]] / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
EspB$y.75 = (log(endsegm/(1-endsegm))-EspB[["bb0"]])*EspB[[dd2]] / rowSums(EspB[,c(dd1, dd2)]*EspB[,c(dd1, dd2)])
colnames(EspA) <- c(paste0("Dim", seq(1,k,1)))
if (!requireNamespace("tidyr", quietly = TRUE)) {
stop("Package \"tidyr\" needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("dplyr", quietly = TRUE)) {
stop("Package \"dplyr\" needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
stop("Package \"ggplot2\" needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("ggrepel", quietly = TRUE)) {
stop("Package \"ggrepel\" needed for this function to work. Please install it.",
call. = FALSE)
}
if(ellipses){
min.plot <- ifelse(is.null(xylim), floor(min(min(x$Ellip$Dimb1), min(x$Ellip$Dimb2))), xylim[1])
max.plot <- ifelse(is.null(xylim), ceiling(max(max(x$Ellip$Dimb1), max(x$Ellip$Dimb2))), xylim[2])
}else{
min.plot <- ifelse(is.null(xylim), floor(min(min(EspA$Dim1), min(EspA$Dim2))), xylim[1])
max.plot <- ifelse(is.null(xylim), ceiling(max(max(EspA$Dim1), max(EspA$Dim2))), xylim[2])
}
if(x$method == "CG") subt <- "Estimation with Conjugate Gradient"
if(x$method != "CG") subt <- paste0("Estimation with ", x$method, " algorithm")
if(grap=="ind"){
if (is.null(titles)) titulo <- "Individuals plot"
if (!is.null(titles)) titulo <- titles
if(is.null(col.ind)){
g <- ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(EspA[,dim[1]], y=EspA[,dim[2]]), color='#E7B800', size = 2, shape=17)+
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2)  +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot, max.plot) + ggplot2::ylim(min.plot, max.plot) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold"), legend.position = "none") +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}else{
g <-  ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(EspA[,dim[1]], y=EspA[,dim[2]], colour=col.ind), size = 2, shape=17)+
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2)  +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot, max.plot) + ggplot2::ylim(min.plot, max.plot) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold")) +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}
if(label.ind){
if(repel){
g <- g +
ggrepel::geom_text_repel(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]], label = rownames(EspA)), size=3.5, segment.color = "grey50")
}else{
g <- g +
ggplot2::geom_text(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]], label = rownames(EspA)), size=3.5)
}
}
}
min.plot2 <- ifelse(is.null(xylim), floor(min(min(EspB$x.50), min(EspB$x.75), min(EspB$y.50), min(EspB$y.75))), xylim[1])
max.plot2 <- ifelse(is.null(xylim), ceiling(max(max(EspB$x.50), max(EspB$x.75), max(EspB$y.50), max(EspB$y.75))), xylim[2])
limit2 <- max(abs(min.plot2), abs(max.plot2))
if(grap == "var"){
if (is.null(titles)) titulo <- "Variables plot"
if (!is.null(titles)) titulo <- titles
g <- ggplot2::ggplot() +
ggplot2::geom_segment(data=EspB, ggplot2::aes(x=x.50, y=y.50, xend=x.75, yend=y.75),
arrow=grid::arrow(angle=25, type="closed",ends="last", length=grid::unit(0.3,"cm")),
colour = col.var, show.legend=FALSE) +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot2, max.plot2) + ggplot2::ylim(min.plot2, max.plot2) +
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2)  +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold"),
legend.position = "none") +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
if(repel){
g <- g +
ggrepel::geom_text_repel(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75),
hjust = (1 - 2 * sign(x.75))/ 2),
size=3, segment.color = "grey50", colour = "black", vjust=0)
}else{
g <- g +
ggplot2::geom_text(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75),
hjust = (1 - 2 * sign(x.75))/ 2),
size=3, colour = "black", vjust=0)
}
}
min.plot3 <-  min(min.plot, min.plot2)
max.plot3 <-  max(max.plot, max.plot2)
limit3 <- max(abs(min.plot3), abs(max.plot3))
if(grap == "biplot"){
if (is.null(titles)) titulo <- "Logistic Biplot"
if (!is.null(titles)) titulo <- titles
if(is.null(col.ind)){
g <- ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]]), color='#E7B800', size = 2, shape=17)+
ggplot2::geom_segment(data=EspB, ggplot2::aes(x=x.50, y=y.50, xend=x.75, yend=y.75), arrow=grid::arrow(angle=20,type="closed",ends="last", length=grid::unit(0.3,"cm")), colour = col.var, show.legend=FALSE) +
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2) +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot3, max.plot3) + ggplot2::ylim(min.plot3, max.plot3) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold"),
legend.position = "none") +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}else{
g <- ggplot2::ggplot() +
ggplot2::geom_point(data=EspA, ggplot2::aes(x=EspA[,dim[1]], y=EspA[,dim[2]], colour=col.ind), size = 2, shape=17)+
ggplot2::geom_segment(data=EspB, ggplot2::aes(x=x.50, y=y.50, xend=x.75, yend=y.75), arrow=grid::arrow(angle=20,type="closed",ends="last", length=grid::unit(0.3,"cm")), colour = col.var, show.legend=FALSE) +
ggplot2::geom_vline(xintercept = 0, color = "black", linetype = 2) +
ggplot2::geom_hline(yintercept = 0, color = "black", linetype = 2) +
ggplot2::xlab(paste("Dimension", dim[1])) +
ggplot2::ylab(paste("Dimension", dim[2])) +
ggplot2::xlim(min.plot3, max.plot3) + ggplot2::ylim(min.plot3, max.plot3) +
ggplot2::scale_color_brewer(palette="Set1") +
ggplot2::theme_bw() +
ggplot2::theme(axis.text = ggplot2::element_text(face = "bold")) +
ggplot2::labs(title = titulo,
subtitle = subt,
caption = Sys.Date()) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
plot.subtitle =  ggplot2::element_text(hjust = 0.5))
}
if(repel){
g <- g +
ggrepel::geom_text_repel(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75), hjust = (1 - 2 * sign(x.75))/ 2),
size=3, segment.color = "grey50", vjust=0)
}else{
g <- g +
ggplot2::geom_text(data=EspB, ggplot2::aes(x=x.75, y=y.75, label = rownames(EspB),
angle = (180/pi) * atan(y.75/x.75), hjust = (1 - 2 * sign(x.75))/ 2),
size=3, vjust=0)
}
if(label.ind){
g <- g +
ggrepel::geom_text_repel(data=EspA, ggplot2::aes(x=Dim1, y=Dim2, label = rownames(EspA)), size=3.5, segment.color = "grey50")
}
}
if(ellipses){
g <- g +
ggplot2::geom_point(data=x$Ellip, ggplot2::aes(x=Dimb1, y=Dimb2, group=ind), size=0.001, colour="lightgray", shape=20)
}
return(g + ggplot2::coord_fixed())
}
data("Methylation")
set.seed(12345)
n <- nrow(Methylation)
p <- ncol(Methylation)
miss <- matrix(rbinom(n*p, 1, 0.2), n, p) #I simulate some missing data
miss <- ifelse(miss == 1, NA, miss)
x <- Methylation + miss  #Matrix containing missing data
out <- LogBip(x, method = "PDLB", maxit = 1000)
plotBLB(out, ellipses = T)
